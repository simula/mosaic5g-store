#!/bin/bash
################################################################################
#
# Copyright (c) 2016, EURECOM (www.eurecom.fr)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of the FreeBSD Project.
#
################################################################################
# file common
# brief common functions and variables
# author  navid.nikaein@eurecom.fr


set_env_paths(){
#paths in openairinterface5g on Git
    
    openair_path=/srv/openair5G_rrh
    openair_out=/srv/.out
    build_path=$openair_path/cmake_targets
    rrh_path=$openair_path/targets/bin
    tools_path=$build_path/tools
    rrh_gw_exec_name=rrh_gw
    
    config_file_default=enb_sodera_highband_5MHz_rx19dB_txfull.ini
    config_file_sodera_path=/srv/openair5G_rrh/targets/ARCH/LMSSDR
    config_file_sodera_5mhz_b7=enb_sodera_highband_5MHz_rx19dB_txfull.ini
    config_file_sodera_10mhz_b7=enb_sodera_highband_10MHz_rx19dB_txfull.ini
   
    config_file_usrp="NULL"
    config_file_bladerf="NULL"
    config_file_exmimo="NULL"
    
    
}

install_required_kernel(){
version=3.19
if [ "$(cat $CHARM_DIR/.kernel)" == "lowlatency" ]; then 
    wget -r -e robots=off --accept-regex "(.*lowlatency.*amd64)|(all).deb" http://kernel.ubuntu.com/~kernel-ppa/mainline/v${version}-vivid/
else
    wget -r -e robots=off --accept-regex "(.*generic.*amd64)|(all).deb" http://kernel.ubuntu.com/~kernel-ppa/mainline/v${version}-vivid/
fi 
dpkg -i kernel.ubuntu.com/*/*/*/*deb
}

check_current_kernel(){

required_kern_release="3.19"
required_kern_version=`echo $required_kern_release | cut -d '.' -f1`
required_kern_major_revision=`echo $required_kern_release | cut -d '.' -f2`
current_kern_release=`uname -r`
current_kern_version=`echo $current_kern_release | cut -d '.' -f1`
current_kern_major_revision=`echo $current_kern_release | cut -d '.' -f2`
if [ "$current_kern_version" -gt "$required_kern_version" ]; then
     REQUIRED_KERNEL_IS_INSTALLED="true"
elif [ "$current_kern_version" -eq "$required_kern_version" ] && [ "$current_kern_major_revision" -ge "$required_kern_major_revision" ]; then
     REQUIRED_KERNEL_IS_INSTALLED="true"
else
     REQUIRED_KERNEL_IS_INSTALLED="false"
fi

}

check_rrh_process(){

    IS_RUNNING=`service rrh_gw status`
    
    if [[ $IS_RUNNING =~ .*running.* ]]; then
	juju-log "OAI RRH GW is running...let's check if it is connected to ENB"
	status=0
    else
	juju-log "OAI RRH GW is not running..."
	status=1
    fi
}

check_enb_connection(){
    
    COUNTER=0
    while [ $COUNTER -lt 30 ]; do
	sleep 1
	if [ "$(grep -c "is now connected" /srv/.out)" -gt 0 ]; then
	    juju-log "OAI RRH GW is running and connected to ENB"
	    break
	fi
	COUNTER=$((COUNTER+1))
    done
    
    if [ "$COUNTER" -eq 30 ]; then
	
	status-set maintenance "Make sure eNB is running...or wait for hooks to finish the execution..."
	exit 0
	
    fi
}

user_conf(){

juju-log "Setting up the config option chose by the user or the default ones"

#NETWORK CONFIG

juju-log "Setting up network configuration in the epc.conf file"

}

# get from http://www.linuxjournal.com/content/validating-ip-address-bash-script
validate_ip() {

local  ip=$1
local  stat=1

if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
    OIFS=$IFS
    IFS='.'
    ip=($ip)
    IFS=$OIFS
    [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
        && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
    stat=$?
fi
return $stat
}
get_ip_address(){

local  ip=$1
local  status=1
local  status_after=1

#if ! validate_ip $ip; then
#    ip=`host $ip | awk '{ print $4 }'`
#fi

validate_ip $ip
status=$?
if [ "$status" == "1" ] ; then
    echo "doing nslookup for the RRH host name $ip"
    juju-log "perfroming nslookup for the RRH host name ($ip)"
    validated_public_ip=$(nslookup $ip | awk ' FNR == 5 {print $2 }')
    status_after=$(validate_ip $ip)
    if [ "$status_after" == 1 ] ; then
        echo "nslookup failed for the RRH host name $ip"
        juju-log "nslookup failed for the RRH host name ($ip)"
        return $status_after
    else
        echo "RRH ip address is $validated_public_ip"
        return 0
    fi
else
    validated_public_ip=$ip
    echo "RRH ip address is $validated_public_ip"
    return 0
fi
}
