#!/bin/bash
################################################################################
#
# Copyright (c) 2016, EURECOM (www.eurecom.fr)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of the FreeBSD Project.
#
################################################################################
# file install
# brief install the oai-spgw from the openair-cn git repository
# author  navid.nikaein@eurecom.fr and A. B. Molini   

install_packages(){
    status-set maintenance "Installing some dependencies"

    gitAlreadyInstalled=$(dpkg --get-selections git 2>/dev/null | grep -c 'install') || true
    if [ ! $gitAlreadyInstalled -eq 1 ]; then # If git is NOT installed
       apt-get install -y git # Ensure necessary git dependency exist.
    fi
    atAlreadyInstalled=$(dpkg --get-selections at 2>/dev/null | grep -c 'install') || true
    if [ ! $atAlreadyInstalled -eq 1 ]; then 
       apt-get install -y at
    fi

    #Mysql-server simply because we want resolveip tool
    PASSWORD="linux"
    echo "mysql-server mysql-server/root_password password $PASSWORD" | debconf-set-selections
    echo "mysql-server mysql-server/root_password_again password $PASSWORD" | debconf-set-selections

    apt install -y mysql-client
}

juju_install_kernel(){
    status-set maintenance "Check the kernel and update if required"
    juju-log "Check the kernel and update if required"

    check_current_kernel

    if [[ $REQUIRED_KERNEL_IS_INSTALLED == false ]]; then
        # a way to avoid looping for lxc env.
        if [ "$(cat $CHARM_DIR/.reboot)" != "reboot" ]; then  
          echo "reboot" > $CHARM_DIR/.reboot 
          juju-log "installing the required kernel and reboot"
          status-set maintenance "installing the required kernel and rebooting"
          install_required_kernel
          juju-reboot --now
        else 
          juju-log "Can't install the kernel (probably in LXC), make sure that required kernel is installed (3.19)"
        fi 
        #if we reboot now, the install is blocked here and reschedule after the reboot
        #and xtables will be installed
    fi

    sed -i -r "s/(check_kernel_release_and_install_xtables_addons_oai[^()]+)/#\1/" $tools_path/build_helper
}

clone_repo(){
    status-set maintenance "Fetching OpenAirInterface HSS"
    echo -n | openssl s_client -showcerts -connect gitlab.eurecom.fr:443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' >> /etc/ssl/certs/ca-certificates.crt

    if [ -d "$openair_path"  ]; then
        juju-log "Updating the installation directory"
        cd $openair_path 
        git fetch --all
        git reset --hard origin/master
        git checkout $branch 
        if [ "$revision" != "head" ]; then 
        git checkout $revision
        cd -
        fi 
    else
       #Save the current hosts file
       cp -f /etc/hosts /home
       git clone --branch $branch https://gitlab.eurecom.fr/oai/openair-cn.git $openair_path
       cd $openair_path 
       if [ "$revision" != "head" ]; then 
           git checkout $revision
           cd -
       fi 
    fi

    #We don't need phpmyadmin in the installation as it is provided by phpmyadmin charm
    #sed -i "s/phpmyadmin/#phpmyadmin/" $tools_path/build_helper
    sed -i '/phpmyadmin/d' $tools_path/build_helper

}

update_hostname(){
  HOSTNAME=`echo $JUJU_UNIT_NAME | sed 's|/|-|'`
  echo "$HOSTNAME" > /etc/hostname
  hostname $HOSTNAME
  echo "127.0.0.1 `hostname`" > /etc/hosts
}

configure_hosts(){
  #realm=`config-get realm`
  #if [ -z "$(grep -o "`hostname`.$realm" /etc/hosts)" ]; then
     echo 127.0.0.1 localhost > /etc/hosts
     echo 127.0.0.1 `hostname` spgw >> /etc/hosts
#     echo 127.0.0.1 `hostname`.$realm `hostname` spgw >> /etc/hosts
#  fi
}

build_spgw(){
  status-set maintenance "Building spgw"
  # workaround: need to execute build_mme before build_spgw
  $build_run_scripts/build_mme -i -f
  $build_run_scripts/build_spgw -i -f
  $build_run_scripts/build_spgw -j -f
  $build_run_scripts/build_spgw
}

configure_spgw(){
  cp $CHARM_DIR/files/spgw.conf /etc/init/spgw.conf

  mkdir -p $epc_conf_path
  cp $openair_path/ETC/spgw.conf $epc_conf_path/spgw.conf
}

configure_network(){
  #allow dhcp
  local eth=$1
  if [ "$eth" = "eth0" ]; then
    echo "Ignore interface eth0"
    return
  fi
  local file=/etc/network/interfaces.d/${eth}.cfg
  cp ./files/eth1_tpl.cfg $file
  sed -i -e "s/eth1/$eth/g" $file

  #prevent dhcp gateway
  local hook=/etc/dhcp/dhclient-enter-hooks.d/net-${eth}
  cp ./files/dhclient_hook_tpl $hook
  sed -i -e "s/eth1/$eth/g" $hook
  chmod +x $hook
}

set -eux

export DEBIAN_FRONTEND=noninteractive
source $CHARM_DIR/utils/common
set_env_paths

open-port 2152/udp
open-port 2123/udp

branch=`config-get branch`
revision=`config-get revision`
echo "$branch" > $CHARM_DIR/.branch
echo "$revision" > $CHARM_DIR/.revision

status-set maintenance "Fetching and installing Openair4G"

update_hostname
configure_network `config-get sgw-eth`
configure_network `config-get pgw-eth`

install_packages
clone_repo
juju_install_kernel

configure_hosts

build_spgw
configure_spgw

status-set active "Ready to start"
