#!/bin/bash
################################################################################
#
# Copyright (c) 2016, EURECOM (www.eurecom.fr)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of the FreeBSD Project.
#
################################################################################
# file common
# brief common functions and variables
# author  navid.nikaein@eurecom.fr and A. B. Molini

#oai-enb-version="2.0"

set_env_paths(){

#paths in openairinterface-5G on Git

openair_path=/srv/openair5G
build_path=$openair_path/cmake_targets
tools_path=$build_path/tools
conf_path=$openair_path/targets/PROJECTS/GENERIC-LTE-EPC/CONF
exec_path=$openair_path/targets/bin
oaieNB_exec_name=lte-softmodem.Rel10

 
config_file_sodera_path=/srv/openair5G/targets/ARCH/LMSSDR
config_file_sodera_default=enb_sodera_highband_5MHz_rx19dB_txfull.ini
config_file_sodera_5mhz_hb=enb_sodera_highband_5MHz_rx19dB_txfull.ini
config_file_sodera_10mhz_hb=enb_sodera_highband_10MHz_rx19dB_txfull.ini
config_file_sodera_5mhz_lb=enb_sodera_lowband_Lrx_5MHz_rx19dB_txfull.ini
config_file_sodera_10mhz_lb=enb_sodera_lowband_Lrx_10MHz_rx19dB_txfull.ini
config_file_sodera_5mhz_wb=enb_sodera_lowband_Wrx_5MHz_rx19dB_txfull.ini
config_file_sodera_10mhz_wb=enb_sodera_lowband_Wrx_10MHz_rx19dB_txfull.ini

}
get_series(){
local series=$(lsb_release -sc)
if [ -n "$series" ] ; then
    echo $series
else
    echo "unknown"
fi
}
get_kernel_name(){
local series=$(get_series)
case "$series" in
    "trusty") echo "vivid" ; return ;;
    "xenial") echo "xenial" ; return  ;;
    "yakkety") echo "yakkety" ; return ;;
    "zesty") echo "" ; return ;;
esac
echo "vivid"
}
get_kernel_version(){
local series=$(get_series)
case "$series" in
    "trusty") echo "3.19" ; return ;;
    "xenial") echo "4.4.14"  ; return ;;
    "yakkety") echo "4.5.7" ; return ;;
    "zesty") echo "4.8.17"   ; return ;;
esac
echo  "4.4.14"
}

install_required_kernel(){
version=$(get_kernel_version)
name=$(get_kernel_name)
if [ "$(cat $CHARM_DIR/.kernel)" == "lowlatency" ]; then 
    wget -r -e robots=off --accept-regex "(.*lowlatency.*amd64)|(all).deb" http://kernel.ubuntu.com/~kernel-ppa/mainline/v${version}-${name}/
else
    wget -r -e robots=off --accept-regex "(.*generic.*amd64)|(all).deb" http://kernel.ubuntu.com/~kernel-ppa/mainline/v${version}-${name}/
fi 
dpkg -i kernel.ubuntu.com/*/*/*/*deb
}

check_current_kernel(){

required_kern_version=$(get_kernel_version)
required_kern_major=`echo $required_kern_version | cut -d '.' -f1`
required_kern_minor=`echo $required_kern_version | cut -d '.' -f2`
current_kern_release=`uname -r`
current_kern_major=`echo $current_kern_release | cut -d '.' -f1`
current_kern_minor=`echo $current_kern_release | cut -d '.' -f2`

if [[ "$current_kern_release" =~ .*lowlatency.* ]]; then
    LOWLATENCY_KERNEL_IS_INSTALLED="true"
else
    LOWLATENCY_KERNEL_IS_INSTALLED="false"
fi

if [ $current_kern_major -eq $required_kern_major ] && [ $current_kern_minor -ge $required_kern_minor ]; then
     REQUIRED_KERNEL_IS_INSTALLED="true"
else
     REQUIRED_KERNEL_IS_INSTALLED="false"
fi

}


check_rru_process(){


#IS_RUNNING=`systemctl status rru.service`
#if [[ $IS_RUNNING =~ .*running.* ]]; then
#fi

IS_ACTIVE=`systemctl is-active rru.service`

if [ "$IS_ACTIVE" == "active" ]; then
   juju-log "OAI RRU is running"
   status=0
else
   juju-log "OAI RRU is not running"
   status=1
fi

}

# get from http://www.linuxjournal.com/content/validating-ip-address-bash-script
validate_ip() {

local  ip=$1
local  stat=1

if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
    OIFS=$IFS
    IFS='.'
    ip=($ip)
    IFS=$OIFS
    [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
        && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
    stat=$?
fi
return $stat
}

get_ip_address(){

local  ip=$1
local  status=1
local  status_after=1

#if ! validate_ip $ip; then
#    ip=`host $ip | awk '{ print $4 }'`
#fi

validate_ip $ip
status=$?
if [ "$status" == "1" ] ; then
    echo "doing nslookup for the eNB host name $ip"
    juju-log "perfroming nslookup for the eNB host name ($ip)"
    validated_public_ip=$(nslookup $ip | awk ' FNR == 5 {print $2 }')
    status_after=$(validate_ip $ip)
    if [ "$status_after" == 1 ] ; then
        echo "nslookup failed for the eNB host name $ip"
        juju-log "nslookup failed for the eNB host name ($ip)"
        return $status_after
    else
        echo "eNB ip address is $validated_public_ip"
        return 0
    fi
else
    validated_public_ip=$ip
    echo "eNB ip address is $validated_public_ip"
    return 0
fi
}

check_ifup(){
    if [[ ! -d /sys/class/net/${1} ]]; then
        return 1
    elif [[ $(</sys/class/net/${1}/operstate) == up ]]; then
        return 0
    else
        return 1
    fi
}
