#!/bin/bash
################################################################################
#
# Copyright (c) 2017, EURECOM (www.eurecom.fr)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of the FreeBSD Project.
#
################################################################################
# file install hook
# brief install the oai-rru-snap to bridge between oai-enb and oai-rru-snap
# author  navid.nikaein@eurecom.fr

install_packages(){
    sshAlreadyInstalled=$(dpkg --get-selections ssh 2>/dev/null | grep -c 'install') || true
    if [ ! $sshAlreadyInstalled -eq 1 ]; then 
	apt-get install -y --force-yes ssh 
    fi
    sshpassAlreadyInstalled=$(dpkg --get-selections sshpass 2>/dev/null | grep -c 'install') || true
    if [ ! $sshAlreadyInstalled -eq 1 ]; then 
	apt-get install -y --force-yes sshpass 
    fi
    
}

set_args(){
 
    if [ "$hw" == "usrp_b200" ]; then
	config_oai_for_hw="usrpb210"
    elif [ "$hw" == "usrp_300" ]; then
	config_oai_for_hw="usrpx300"
    elif [ "$hw" == "lmsdr" ]; then 
	config_oai_for_hw="lmsdr"
    elif [ "$hw" == "bladrf" ]; then
	config_oai_for_hw="bladerfx40"
    else
	juju-log "Unknown target hardware ($hw), setting the hardware to usrpb210"
	config_oai_for_hw="usrpb210"
    fi 
    
}

set_config_file(){

    if [ "$config_file" == "default" ]; then 
	
	if [ "$node_func" == "NGFI_RRU_IF5" ]; then
	    config_file_name="rru.band${band}.tm1.if5.${bw}PRB.${config_oai_for_hw}.conf"
	    
	elif [ "$node_func" == "NGFI_RRU_IF4p5" ]; then 
	    config_file_name="rru.band${band}.tm1.if4p5.${bw}PRB.${config_oai_for_hw}.conf"
	else
	    config_file_name="rru.band${band}.tm1.if4p5.${bw}PRB.${config_oai_for_hw}.conf"
	    juju-log "unknown node func $node_func, setting to NFGI_RRU_IF4p5"
	fi 
	juju-log "setting the configuration file to $config_file_name for $node_func and RF $hw"
	
    else 
	juju-log "configuration file ($config_file) not found"
	status-set error "configuration file ($config_file) not found"
    fi 

    echo "$config_file_name" > $CHARM_DIR/.config_file
  
} 

run_rru_snap(){
# just a flag for start script to run the service
    echo "yes" > $CHARM_DIR/.rru_running_flag
}


set -eux
export DEBIAN_FRONTEND=noninteractive

node_func=`config-get node_function`
#S1=`config-get S1_interface`
hw=`config-get target_hardware`
config_file=`config-get config_file`

# used to set the config file for this node
band=`config-get eutra_band`
bw=`config-get N_RB_DL`
user_name=`config-get user_name`
passwd=`config-get passwd`
rru_ip=`config-get rru_ip`	
rru_port=`config-get rru_port`
fh_tr_mode=`config-get fh_transport_mode`

echo "$hw" > $CHARM_DIR/.hw
echo "$band" > $CHARM_DIR/.band
echo "$bw" > $CHARM_DIR/.bw
echo "$node_func" > $CHARM_DIR/.node_func
echo "$user_name" > $CHARM_DIR/.user_name
echo "$passwd" > $CHARM_DIR/.passwd
echo "$rru_ip" > $CHARM_DIR/.rru_ip
echo "$rru_port" > $CHARM_DIR/.rru_port
echo "$fh_tr_mode"  > $CHARM_DIR/.fh_tr_mode


build_args=""
exec_args=""
config_oai_for_hw=""
config_file_name=""
config_file_lmsdr="null"


install_packages

set_args

set_config_file

run_rru_snap

status-set blocked "Waiting for RRU relation"
