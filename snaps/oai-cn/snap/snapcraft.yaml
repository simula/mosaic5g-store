name: oai-cn
version: '1.4' 
summary: OpenAirInterface CN entity with LL-MEC Agent
description: |
    OAI-CN is the openairinterface-based CN with LL-MEC agent allowing to connect a 4G-comptaible BS and UEs to the core network. It is one of the projects of Mosaic5G inititive.
grade: stable
type: app
architectures:
  - amd64
  - i386
confinement: devmode
# license: Apache-2.0
base: core18

apps:
  test-all:
    command : test all
  info:
    command: run info
  start-all:
    command: run start-all
  stop-all:
    command: run stop-all
  status-all:
    command: run status-all
  restart-all:
    command: run restart-all
  mme:
    command: run mme 
  mmed:
    command: run mme
    daemon: simple
    stop-command: run stop mmed
    stop-timeout: 7s
  mme-start:
    command: run start mmed
  mme-stop:
    command: run stop mmed
  mme-restart:
    command: run restart mmed
  mme-status:
    command: run status mmed
  mme-journal:
    command: run journal mmed
  spgw:
    command: run spgw
  spgwd:
    command: run spgw
    daemon: simple
    stop-command: run stop spgwd
    stop-timeout: 7s
  spgw-start:
    command: run start spgwd
  spgw-stop:
    command: run stop spgwd
  spgw-restart:
    command: run restart spgwd
  spgw-status:
    command: run status spgwd
  spgw-journal:
    command: run journal spgwd
  hss:
    command: run hss
  hssd:
    command: run hss
    daemon: simple
    stop-command: run stop hssd
    stop-timeout: 7s
  hss-start:
    command: run start hssd
  hss-stop:
    command: run stop hssd
  hss-restart:
    command: run restart hssd
  hss-status:
    command: run status hssd
  hss-journal:
    command: run journal hssd
  hss-init:
    command: init hss 
  mme-init:
    command: init mme
  spgw-init:
    command: init spgw
  help:
    command: run help
#  debug:
#    command: run gdb
  mme-conf-set:
    command: conf set-mme
  spgw-conf-set:
    command: conf set-spgw
  hss-conf-set:
    command: conf set-hss
  mme-conf-get:
    command: conf echo-mme
  spgw-conf-get:
    command: conf echo-spgw
  hss-conf-get:
    command: conf echo-hss
  mme-conf-show:
    command: conf cat-mme
  spgw-conf-show:
    command: conf cat-spgw
  hss-conf-show:
    command: conf cat-hss
  mme-conf-list:
    command: conf ls-mme
  spgw-conf-list:
    command: conf ls-spgw
  hss-conf-list:
    command: conf ls-hss
  hss-add-user:
    command: run hss-add-user
  hss-remove-user:
    command: run hss-remove-user
  hss-dump-users:
    command: run hss-dump-users
  hss-get-user:
    command: run hss-get-user
  hss-reset-db:
    command: run hss-reset-db
  hss-remove-mme:
    command: run hss-remove-mme
  hss-add-mme:
    command: run hss-add-mme
  hss-dump-mmeid:
    command: run hss-dump-mmeid
hooks:
  install:
    plugs: [home, network]
  configure:
    plugs: [home, network]
    
parts:
#  gdb:
#    plugin: nil
#    override-build: |
#      sudo apt install gdb -y
#      mkdir $SNAPCRAFT_PART_INSTALL/share 
#      cp -r /usr/share/gdb $SNAPCRAFT_PART_INSTALL/share
#      cp /usr/bin/gdb* $SNAPCRAFT_PART_INSTALL
#    prime:
#      - gdb*
#      - share/*
  mme:
    plugin: cmake
    source: git@gitlab.eurecom.fr:oai/openair-cn.git
    source-branch: openair-cn-llmec
    build-packages: [build-essential, ]
    stage-packages:
    - libconfig9
    - libsctp1
    override-build: |
      #export DEBIAN_FRONTEND=noninteractive
      cd ../src
      cd scripts
      ./build_mme -i -f
      ./build_mme
      cd ..
      mkdir -p $SNAPCRAFT_PART_INSTALL/mme/
      cp etc/mme*  $SNAPCRAFT_PART_INSTALL/mme/
      cp build/mme/build/*.*  $SNAPCRAFT_PART_INSTALL/mme/
      cp build/mme/build/mme  $SNAPCRAFT_PART_INSTALL/mme/
    stage:
      - mme/*
      - usr/lib/x86_64-linux-gnu/*
      - lib/*
    prime:
      - mme/*
      - usr/lib/x86_64-linux-gnu/*
      - lib/*
  spgw:
    plugin: cmake
    source: git@gitlab.eurecom.fr:oai/openair-cn.git
    source-branch: openair-cn-llmec
    build-packages: [build-essential, ]
    stage-packages:
      - libcurl4-openssl-dev
      - curl
      - libconfig9
    override-build: |
      #export DEBIAN_FRONTEND=noninteractive
      cd ../src
      cd scripts
      ./build_spgw -i -f
      ./build_spgw
      cd ..
      mkdir -p $SNAPCRAFT_PART_INSTALL/spgw
      cp etc/spgw*  $SNAPCRAFT_PART_INSTALL/spgw/
      cp build/spgw/build/*.*  $SNAPCRAFT_PART_INSTALL/spgw
      cp build/spgw/build/spgw  $SNAPCRAFT_PART_INSTALL/spgw/
    stage:
      - spgw/*
      - usr/lib/x86_64-linux-gnu/*
      - usr/bin/*
      - lib/*
    prime:
      - spgw/*
      - usr/lib/x86_64-linux-gnu/*
      - lib/*
      - usr/bin/curl*
  hss:
    plugin: cmake
    source: git@gitlab.eurecom.fr:oai/openair-cn.git
    source-branch: openair-cn-llmec
    build-packages: [build-essential, ]
    stage-packages:
      - libconfig-dev
      - libgcrypt11-dev
      - libmysqlclient-dev
      - libsctp-dev
      - mysql-client
      - mysql-server
      - libaio1
      - libevent-core-2.1-6
      - libhtml-template-perl
      - mysql-client-5.7
      - mysql-client-core-5.7
      - mysql-common
      - mysql-server-5.7
      - mysql-server-core-5.7
    #stage:
    #  - lib/*/*.so.*
    #  - usr/lib/*/*.so.*
    override-build: |
      cd ../src/
      cd scripts
      ./build_hss  -i -F -e 
      ./build_hss
      cd ..
      pwd
      mkdir -p $SNAPCRAFT_PART_INSTALL/hss
      ls $SNAPCRAFT_PART_INSTALL
      echo "$SNAPCRAFT_PART_INSTALL"
      cp /usr/bin/mysqladmin $SNAPCRAFT_PART_INSTALL/hss/
      cp /usr/bin/mysql $SNAPCRAFT_PART_INSTALL/hss/
      cp src/oai_hss/db/oai_db.sql $SNAPCRAFT_PART_INSTALL/hss/
      cp build/hss/build/*.*  $SNAPCRAFT_PART_INSTALL/hss
      cp build/hss/build/oai_hss  $SNAPCRAFT_PART_INSTALL/hss/
    stage:
      - usr/local/*
      - hss/*
      - usr/lib/*
      - lib/*
      - usr/bin/mysql*
    prime:
      - usr/local/*
      - hss/*
      - usr/lib/*
      - lib/*
      - usr/bin/mysql*
#  fd:
#    plugin: cmake
#    source: git@gitlab.eurecom.fr:oai/freediameter.git
#    source-branch: eurecom-1.2.0
#    override-build: |
#      cd ../src
#      mkdir -p build
#      cd build
#      cmake -DCMAKE_INSTALL_PREFIX:PATH=$SNAPCRAFT_PART_INSTALL/usr/local ../
#      #cmake ../
#      make -j`nproc`
#      sudo -S -E make install
#      #mkdir -p $SNAPCRAFT_PART_INSTALL/usr/local/lib/freeDiameter/
#      #sudo cp -r /usr/local/lib/freeDiameter $SNAPCRAFT_PART_INSTALL/usr/local/lib
  frontend:
    plugin: dump
    source: frontend
