#! /bin/bash
################################################################################
# Licensed to the Mosaic5G under one or more contributor license
# work for additional information regarding copyright ownership.
# Apache License, Version 2.0  (the "License");
# You may obtain a copy of the License at
#  
#    	http://www.apache.org/licenses/LICENSE-2.0
#  
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
# -------------------------------------------------------------------------------
#   For more information about the Mosaic5G:
#   	contact@mosaic-5g.io
#
#
################################################################################
# file run
# brief run scripts and variables for flexran Snap
# author Navid Nikaein (navid.nikaein@eurecom.fr, navid.nikaein@mosaic-5g.io)


. $SNAP/common
. $SNAP/util

export LD_LIBRARY_PATH="$SNAP/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"

if [ ! -e $FLEXRAN_EXEC ]; then
    echo_error "Command $FLEXRAN_EXEC not found"
    exit 127
fi		   	   

if [ -r $CONF_DIR/sbi_config.sh ] ; then 
    . $CONF_DIR/sbi_config.sh
    FLEXRAN_EXEC_ARGS=" -p $SBI_PORT"
fi

if [ -r $CONF_DIR/nbi_config.sh ] ; then 
    . $CONF_DIR/nbi_config.sh
    FLEXRAN_EXEC_ARGS="$FLEXRAN_EXEC_ARGS -n $NBI_PORT"
fi

if [ -r $CONF_DIR/naddr_config.sh ] ; then 
    . $CONF_DIR/naddr_config.sh
    FLEXRAN_EXEC_ARGS="$FLEXRAN_EXEC_ARGS -s $NBI_ADDR"
fi

if [ -r $CONF_DIR/saddr_config.sh ] ; then 
    . $CONF_DIR/saddr_config.sh
    FLEXRAN_EXEC_ARGS="$FLEXRAN_EXEC_ARGS -a $SBI_ADDR"
fi

case "$1" in
    "openapi" )
	shift
	python3 $SNAP/api.py "$@"
	;;
    
    "openapiman" )
	shift
	python3 $SNAP/api-manager.py "$@"
	;;
    
    "gdb" )
        cd $SNAP/bin
	echo "Running $SNAP_NAME with the gdb"
	touch      $SNAP_DATA/.gdb_$SNAP_NAME
	chmod 777  $SNAP_DATA/.gdb_$SNAP_NAME
	echo "file $FLEXRAN_EXEC"           > $SNAP_DATA/.gdb_$SNAP_NAME
	echo "set args $FLEXRAN_EXEC_ARGS" >> $SNAP_DATA/.gdb_$SNAP_NAME
	echo "run"                         >> $SNAP_DATA/.gdb_$SNAP_NAME
	cat $SNAP_DATA/.gdb_$SNAP_NAME
	exec $SNAP/gdb --data-directory=$SNAP_DATA  -n -x $SNAP_DATA/.gdb_$SNAP_NAME
	;;
    "info" )
	shift 
	snap_info
	;; 
    

    "start"  )
	#snap start $SNAP_NAME
	daemon=$2
	shift 2
	if_sudo
	snapctl start --enable $SNAP_NAME.$daemon "$@"
	snapctl services $SNAP_NAME.$daemon "$@"
	;;
    
    "start-all"  )
	shift
	if_sudo
	snapctl start --enable $SNAP_NAME "$@"
	snapctl services $SNAP_NAME "$@"
	;;
    
    "stop" )
	#snap stop $SNAP_NAME
	daemon=$2
	shift 2
	if_sudo
	snapctl stop --disable $SNAP_NAME.$daemon "$@"
	snapctl services $SNAP_NAME.$daemon "$@"
	;;

    "stop-all" )
	shift
	if_sudo
	snapctl stop --disable $SNAP_NAME "$@"
	snapctl services $SNAP_NAME "$@"
	;;
    
    "restart" )
	#snap restart $SNAP_NAME
	daemon=$2
	shift 2 
	if_sudo
	snapctl stop  --disable $SNAP_NAME.$daemon "$@"
	snapctl start --enable  $SNAP_NAME.$daemon "$@"
	snapctl services $SNAP_NAME.$daemon "$@"
	;;

    "restart-all" )
	shift
	if_sudo
	snapctl stop  --disable $SNAP_NAME "$@"
	snapctl start --enable  $SNAP_NAME "$@"
	snapctl services $SNAP_NAME "$@"
	;;
    
    "status" )
	#snap services $SNAP_NAME
	daemon=$2
	shift 2 
	snapctl services $SNAP_NAME.$daemon "$@"
	;;
    
    "status-all" )
	shift 
	snapctl services $SNAP_NAME "$@"
	;;
    
    "journal" )
	daemon=$2
	shift 2 
	snap_isconnected log-observe
	journalctl -u snap.$SNAP_NAME.$daemon.service "$@"
	;;
    
     "help" )
	 snap_help
	;;	
    *)
	export FLEXRAN_RTC_HOME=$FLEXRAN_DIR
	if_sudo
	#snap_isconnected sys-access
	snap_isconnected process-control
	
	echo_info "$FLEXRAN_EXEC  $FLEXRAN_EXEC_ARGS"
	$FLEXRAN_EXEC  `echo $FLEXRAN_EXEC_ARGS` "$@"
	;;
esac

set_health
