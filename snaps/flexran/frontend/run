#!/bin/bash

. $SNAP/common
. $SNAP/util

export LD_LIBRARY_PATH="$SNAP/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"

if [ ! -e $FLEXRAN_EXEC ]; then
    echo_error "Command $FLEXRAN_EXEC not found"
    exit 127
fi		   	   

if [ -r $CONF_DIR/sbi_config.sh ] ; then 
    . $CONF_DIR/sbi_config.sh
else
    . $FLEXRAN_DIR/etc/sbi_config.sh 
    cp $FLEXRAN_DIR/etc/sbi_config.sh $CONF_DIR
fi

if [ -r $CONF_DIR/nbi_config.sh ] ; then 
    . $CONF_DIR/nbi_config.sh
else
    . $FLEXRAN_DIR/etc/nbi_config.sh 
    cp $FLEXRAN_DIR/etc/nbi_config.sh $CONF_DIR
fi
    
FLEXRAN_EXEC_ARGS=" -p $SBI_PORT -n $NBI_PORT"

case "$1" in
    "openapi" )
	shift
	python3 $SNAP/api.py "$@"
	;;
    
    "openapiman" )
	shift
	python3 $SNAP/api-manager.py "$@"
	;;
    
    "gdb" )
        cd $SNAP/bin
	echo "Running $SNAP_NAME with the gdb"
	touch      $SNAP_DATA/.gdb_$SNAP_NAME
	chmod 777  $SNAP_DATA/.gdb_$SNAP_NAME
	echo "file $FLEXRAN_EXEC"           > $SNAP_DATA/.gdb_$SNAP_NAME
	echo "set args $FLEXRAN_EXEC_ARGS" >> $SNAP_DATA/.gdb_$SNAP_NAME
	echo "run"                         >> $SNAP_DATA/.gdb_$SNAP_NAME
	cat $SNAP_DATA/.gdb_$SNAP_NAME
	exec $SNAP/gdb --data-directory=$SNAP_DATA  -n -x $SNAP_DATA/.gdb_$SNAP_NAME
	;;
    "info" )
	shift 
	snap_info
	;; 
    

    "start"  )
	#snap start $SNAP_NAME
	daemon=$2
	shift 2
	if_sudo
	snapctl start --enable $SNAP_NAME.$daemon "$@"
	snapctl services $SNAP_NAME.$daemon "$@"
	;;
    
    "start-all"  )
	shift
	if_sudo
	snapctl start --enable $SNAP_NAME "$@"
	snapctl services $SNAP_NAME "$@"
	;;
    
    "stop" )
	#snap stop $SNAP_NAME
	daemon=$2
	shift 2
	if_sudo
	snapctl stop --disable $SNAP_NAME.$daemon "$@"
	snapctl services $SNAP_NAME.$daemon "$@"
	;;

    "stop-all" )
	shift
	if_sudo
	snapctl stop --disable $SNAP_NAME "$@"
	snapctl services $SNAP_NAME "$@"
	;;
    
    "restart" )
	#snap restart $SNAP_NAME
	daemon=$2
	shift 2 
	if_sudo
	snapctl stop  --disable $SNAP_NAME.$daemon "$@"
	snapctl start --enable  $SNAP_NAME.$daemon "$@"
	snapctl services $SNAP_NAME.$daemon "$@"
	;;

    "restart-all" )
	shift
	if_sudo
	snapctl stop  --disable $SNAP_NAME "$@"
	snapctl start --enable  $SNAP_NAME "$@"
	snapctl services $SNAP_NAME "$@"
	;;
    
    "status" )
	#snap services $SNAP_NAME
	daemon=$2
	shift 2 
	snapctl services $SNAP_NAME.$daemon "$@"
	;;
    
    "status-all" )
	shift 
	snapctl services $SNAP_NAME "$@"
	;;
    
    "journal" )
	daemon=$2
	shift 2 
	journalctl -u snap.$SNAP_NAME.$daemon.service "$@"
	;;
    
     "help" )
	 snap_help
	;;	
    *)
	export FLEXRAN_RTC_HOME=$FLEXRAN_DIR
	echo_info "$FLEXRAN_EXEC  $FLEXRAN_EXEC_ARGS"
	$FLEXRAN_EXEC  `echo $FLEXRAN_EXEC_ARGS` "$@"
	;;
esac

set_health
