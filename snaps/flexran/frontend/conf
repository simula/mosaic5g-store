#! /bin/bash
################################################################################
# Licensed to the Mosaic5G under one or more contributor license
# work for additional information regarding copyright ownership.
# Apache License, Version 2.0  (the "License");
# You may obtain a copy of the License at
#  
#    	http://www.apache.org/licenses/LICENSE-2.0
#  
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
# -------------------------------------------------------------------------------
#   For more information about the Mosaic5G:
#   	contact@mosaic-5g.io
#
#
################################################################################
# file conf
# brief conf scripts and variables for flexran Snap
# author Navid Nikaein (navid.nikaein@eurecom.fr, navid.nikaein@mosaic-5g.io)


. $SNAP/common
. $SNAP/util

case "$1" in
    "set-log" )
	CONFIG_FILE=$2
	if [  "$CONFIG_FILE" != "${CONFIG_FILE#/}" -a -f "$CONFIG_FILE" ]; then
	    echo_success "Setting the default config file to: $CONFIG_FILE"
	    
	elif [ -f "$CONF_DIR/$CONFIG_FILE" ]; then
	    CONFIG_FILE=$CONF_DIR/$CONFIG_FILE
	    echo_info "Config file found in the $CONF_DIR!"
	    echo_info "Resetting to the default config file: $CONFIG_FILE"
	    
	else
	    echo_error "[ERR] Config file $CONFIG_FILE not found, please provide an absolute path!"
	    echo_info "Resetting to the default config file: $LOG_CONF_FILE"
	    CONFIG_FILE=$LOG_CONF_FILE
	fi	
	snapctl set conf.log=$CONFIG_FILE
	echo "LOG_CONF_FILE2=$CONFIG_FILE" > $SNAP_DATA/config_log.sh
       	echo "LOG_CONF_FILE2=$CONFIG_FILE" > $SNAP_USER_DATA/config_log.sh
	;;

    "sbi" )
	if [ "$2" != "" ]; then
            . $CONF_DIR/nbi_config.sh
	    if [ "$2" != "$NBI_PORT" ]; then
		snapctl set conf.sbi=$2
		echo "SBI_PORT=$2" > $CONF_DIR/sbi_config.sh
		echo_info "SBI $2 is properly set!. restart flexran to take the new configuration"
	    else
		# prevent the user to set the same port for nbi and sbi
		echo "Error: can not set the same port $2 for SBI and NBI"
	    fi
	else
	    echo_warn "No SBI port provided"
	fi
	
	# echo "SBI_PORT=$2" > $CONF_DIR/sbi_config.sh
	# echo "SBI_PORT=$2" > $SNAP_USER_DATA/sbi_config.sh
	;;
    "nbi" )
	if [ "$2" != "" ]; then
            . $CONF_DIR/sbi_config.sh
	    if [ "$2" != "$SBI_PORT" ]; then
		snapctl set conf.nbi=$2
		echo "NBI_PORT=$2" > $CONF_DIR/nbi_config.sh
		echo_info "NBI $2 is properly set!. restart flexran to take the new configuration"
	    else
		# prevent the user to set the same port for nbi and sbi
		echo_error "Error: can not set the same port $2 for SBI and NBI"
	    fi
	else
	    echo_warn "No NBI port provided"
	fi
	# echo "NBI_PORT=$2" > $CONF_DIR/nbi_config.sh
	# echo "NBI_PORT=$2" > $SNAP_USER_DATA/nbi_config.sh
	;;
    
    "naddr" )
	if [ "$2" != "" ]; then
            snapctl set conf.naddr=$2
	    echo "NBI_ADDR=$2" > $CONF_DIR/naddr_config.sh
	    echo_info "NBI_ADDR $2 is properly set!"
	else
	    # prevent the user to set the same port for nbi and sbi
	    echo_error "NBI address empty"
	fi
	;;
    "saddr" )
	if [ "$2" != "" ]; then
            snapctl set conf.saddr=$2
	    echo "SBI_ADDR=$2" > $CONF_DIR/saddr_config.sh
	    echo_info "SBI_ADDR $2 is properly set!"
	else
	    # prevent the user to set the same port for nbi and sbi
	    echo_error "SBI addr empty"
	fi
	;;

    "addr" )
	. $CONF_DIR/saddr_config.sh
	. $CONF_DIR/naddr_config.sh
	echo_info "SBI_ADDR:  $SBI_ADDR"
	echo_info "NBI_ADDR:  $NBI_ADDR"
 	;;
    "ports" )
	. $CONF_DIR/sbi_config.sh
	. $CONF_DIR/nbi_config.sh
	echo_info "SBI_PORT:  $SBI_PORT"
	echo_info "NBI_PORT:  $NBI_PORT"
 	;;

    "ls-log" )
	if [ -r $SNAP_DATA/config_log.sh ]; then
	    . $SNAP_DATA/config_log.sh
	fi
	
	# default config file is (unless set in above config)
	LOG_CONFIG=${LOG_CONF_FILE2:-$LOG_CONF_FILE}
	ls $(dirname $LOG_CONFIG)/*log
	;;
    
    "echo-log" | "cat-log" )
	show_file=$2
	
	
	if [ -r $SNAP_DATA/config_log.sh ]; then
	    . $SNAP_DATA/config_log.sh
	fi
	
	# default config file is (unless set in above config)
	LOG_CONFIG=${LOG_CONF_FILE2:-$LOG_CONF_FILE}
	# echo (get), cat (show)
        # `echo $1 | cut -d"-" -f1` $MME_CONFIG
	
	if [ "$show_file" != "" ]; then
	    # echo "File to show $SNAP_DATA/$show_file"
	    absolute_show_file=$SNAP_DATA/$show_file
	    if [ ! -e $absolute_show_file ]; then
		echo "The file $absolute_show_file does not exist"
	    else
		`echo $1 | cut -d"-" -f1` $absolute_show_file
	    fi
	else
	    # echo "File to show $MME_CONFIG"
	    `echo $1 | cut -d"-" -f1` $LOG_CONFIG
	fi
	
	;;

    * )
	echo_error "unknow option: $1"
	;;
    
esac
    

  
