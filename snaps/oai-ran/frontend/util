#!/bin/bash

. $SNAP/common

# Echo 
black='\E[30m'
red='\E[31m'
green='\E[32m'
yellow='\E[33m'
blue='\E[1;34m'
magenta='\E[35m'
cyan='\E[36m'
white='\E[37m'
reset_color='\E[00m'
COLORIZE=1

cecho()  {  
    # Color-echo
    # arg1 = message
    # arg2 = color
    local default_msg="No Message."
    message=${1:-$default_msg}
    color=${2:-$green}
    [ "$COLORIZE" = "1" ] && message="$color$message$reset_color"
    echo -e "$message"
    return
}

echo_error()   { cecho "$*" $red          ;}
echo_fatal()   { cecho "$*" $red; exit -1 ;}
echo_warn()    { cecho "$*" $yellow       ;}
echo_success() { cecho "$*" $green        ;}
echo_info()    { cecho "$*" $blue         ;}


if_sudo(){

    if [ "$(id -u)" -eq 0 ] ; then
	return 0
    else
	echo "Please run as a sudoer!"
	exit 1
    fi
}

set_health(){
    
    status=$(snapctl services $SNAP_NAME.enbd)
    case "$status" in
	*inactive*)
	    #echo "Service inactive"
	    snapctl set-health --code=ready blocked "$SNAP_NAME ready to be run"
	    ;;
	*active*)
	    #echo "Service active"
	    snapctl set-health okay
	    ;;
	*)
            #echo "Unknown service state"
	    snapctl set-health --code=error error "Execution failed. Checked the Journal"
	    ;;
    esac 
    
}

snap_info(){
    echo_info "Snap Name: $SNAP_NAME"
    echo_info "Snap Instance Name: $SNAP_INSTANCE_NAME"
    echo_info "Sanp Version: $SNAP_VERSION"
    echo_info "Sanp Revision: $SNAP_REVISION"
    echo_info "Snap Data: $SNAP_DATA"
    echo_info "Snap Conf: "
    snapctl get conf
    echo ""
    echo_info "For more information, run: snap info $SNAP_NAME"
}

snap_help(){
	echo_info "Usage:                    sudo $SNAP_NAME.[x] args"
	echo "                          App [x] is enb, cudu, and rru"
	echo "Note:                     root priviliage required"
	echo "Options:"
	echo "oai-ran.info              get the info for this snap"     
	echo "oai-ran.check              test snap services" 
	echo "oai-ran.init              initialize $SNAP_NAME (after the 1st installation)"
	echo ""
	echo "oai-ran.[x]               run the App [x] manually"
	echo "oai-ran.[x]-conf-get      get the current $SNAP_NAME.[X] configuration file"
	echo "oai-ran.[x]-conf-list     list the $SNAP_NAME.[x] configuration files"
	echo "oai-ran.[x]-conf-set      set the $SNAP_NAME.[x] configuration file"
	echo "oai-ran.[x]-conf-show     show the path to the $SNAP_NAME.[x] configuration file"
	echo "oai-ran.[x]-debug         debug the $SNAP_NAME.[x] with gdb, only valid for enb and cudu"
	echo "oai-ran.[x]-journal       get the $SNAP_NAME.[x] daemon logs"
	echo "oai-ran.[x]-restart       restart the $SNAP_NAME.[x] daemon"
	echo "oai-ran.[x]-start         start the $SNAP_NAME.[x] daemon"
	echo "oai-ran.[x]-status        status the $SNAP_NAME.[x] daemon"
	echo "oai-ran.[x]-stop          stop the $SNAP_NAME.[x] daemon"
	echo ""
	echo "  help:                   print this help"
	
}
