#! /bin/bash
################################################################################
# Licensed to the Mosaic5G under one or more contributor license
# work for additional information regarding copyright ownership.
# Apache License, Version 2.0  (the "License");
# You may obtain a copy of the License at
#  
#    	http://www.apache.org/licenses/LICENSE-2.0
#  
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
# -------------------------------------------------------------------------------
#   For more information about the Mosaic5G:
#   	contact@mosaic-5g.io
#
#
################################################################################
# file test
# brief test scripts and variables for ll-mec Snap
# author Navid Nikaein (navid.nikaein@eurecom.fr, navid.nikaein@mosaic-5g.io)


. $SNAP/common
. $SNAP/util

waiting_time=1
check_string="Server running"
d="d"

if_sudo
snap_isconnected log-observe
#snap_isconnected network-control
snap_isconnected process-control

case "$1" in
    "api" )

    ;;
    
    "ll-mec")
	
	echo ""
	echo_info "Init"
	$SNAP/init

	$SNAP/run status-all
	sleep $waiting_time 
	echo_info "Start $1$d"
	$SNAP/run start "$1$d" 
	sleep $waiting_time
	echo_info "Stop $1$d"
	$SNAP/run stop "$1$d"
	sleep $waiting_time
	$SNAP/run status-all
	
	sleep $waiting_time 
	$SNAP/run status-all
	sleep $waiting_time 
	
	echo_info "Stop All"
	$SNAP/run stop-all
	sleep $waiting_time

	echo ""
	echo_info "Check and set $1 conf"
	$SNAP/conf ls
	conf=$(snapctl get conf.$1)
	snapctl set conf.llmec=$conf


      	echo ""
	echo_info "Snap Info"
	$SNAP/run info

	echo ""
	echo_info "Start OpenAPI"
	$SNAP/run start apid
	$SNAP/run journal apid -e -n20 |  egrep -i "Starting Open API|Starting OpenAPI" > /dev/null 2>&1
	
	if [ $? -eq 0 ] ; then
	    echo_success "apid test: passed"
	else
	    echo_error   "apid test: failed"
	fi
   

	echo ""
	echo_info "Check $1 exec"
	$SNAP/run journal $1$d -e -n10 | grep "$check_string" > /dev/null 2>&1
	if [ $? -eq 0 ] ; then
	    echo_success "$1 Exec: passed"
	else
	    echo_error   "$1 exec: failed"
	fi
      	;;

   
esac

	
