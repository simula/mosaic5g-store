#!/bin/bash
# Copyright 2016-2018 Eurecom and Mosaic5G Platforms Authors
# Licensed to the Mosaic5G under one or more contributor license
# agreements. See the NOTICE file distributed with this
# work for additional information regarding copyright ownership.
# The Mosaic5G licenses this file to You under the
# Apache License, Version 2.0  (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the Mosaic5G:
#      contact@mosaic5g.io
#
################################################################################
# file config-change
# brief manage the config changes of oai-spgw service, and occurs everytime a new configuration value is updated (juju set)
# author navid.nikaein@eurecom.fr and A. B. Molini  

set -ux
source $CHARM_DIR/utils/common
set_env
status-set maintenance "Config-Changed hook"

if [ ! -f $spgw_conf ] ; then
    juju-log "MME config file does not exist $spgw_conf"
fi

if [ "$(config-get snap)" != "$(cat $CHARM_DIR/.snap)" ]; then
    juju-log "snap channel changed, upgrade charm"
    echo "$(config-get snap)" > $CHARM_DIR/.snap
    $CHARM_DIR/hooks/upgrade-charm
fi


sgw_iface=`config-get sgw-eth`
pgw_iface=`config-get pgw-eth`
#sgw_iface="none"
#pgw_iface="none"
if [ "$sgw_iface" == "none" ] || [ "$pgw_iface" == "none" ]; then
    ip_addr=`unit-get public-address`
    for interface in $(ls /sys/class/net); do
        if [ `ifconfig $interface | egrep -o "inet addr:[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" | egrep -o "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+"` != "" ]; then
            ipv4=`ifconfig $interface | egrep -o "inet addr:[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" | egrep -o "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+"`
            if [ $ipv4 == $ip_addr ] ; then
                if [ "$sgw_iface" == "none" ] ; then
                    sgw_iface=$interface
                fi
                if [ "$pgw_iface" == "none" ] ; then
                    pgw_iface=$interface  
                fi
                break
            fi
        fi
    done
fi
ipv4_list_start=`config-get ipv4_list_start`
ipv4_list_end=`config-get ipv4_list_end`
ipv6_list=`config-get ipv6_list`
DEFAULT_DNS_IPV4_ADDRESS=`config-get DEFAULT_DNS_IPV4_ADDRESS`
if [ $DEFAULT_DNS_IPV4_ADDRESS == "127.0.0.1" ]; then
    ip_addr=`unit-get public-address`
    for interface in $(ls /sys/class/net); do
        if [ `ifconfig $interface | egrep -o "inet addr:[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" | egrep -o "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+"` != "" ]; then      
          ipv4=`ifconfig $interface | egrep -o "inet addr:[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" | egrep -o "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+"`
          if [ $ipv4 == $ip_addr ] ; then
                dns=$(nmcli device  show $interface |grep -i dns)
                DEFAULT_DNS_IPV4_ADDRESS="$(cut -d':' -f2 <<<"$dns")"
                DEFAULT_DNS_IPV4_ADDRESS=`echo $DEFAULT_DNS_IPV4_ADDRESS`
                break
          fi
        fi
    done
fi
DEFAULT_DNS_SEC_IPV4_ADDRESS=`config-get DEFAULT_DNS_SEC_IPV4_ADDRESS`
mme_s11_ipv4=`cat $CHARM_DIR/.mme_s11_ipv4`
pgw_masquerade=`config-get pgw_masquerade_sgi`
ue_mtu=`config-get ue_mtu`
machine_type=`virt-what`
##############################################################################################

user_conf
stop_spgw
$CHARM_DIR/hooks/start
