#!/bin/bash
# Copyright 2016-2018 Eurecom and Mosaic5G Platforms Authors
# Licensed to the Mosaic5G under one or more contributor license
# agreements. See the NOTICE file distributed with this
# work for additional information regarding copyright ownership.
# The Mosaic5G licenses this file to You under the
# Apache License, Version 2.0  (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the Mosaic5G:
#      contact@mosaic5g.io
#
################################################################################
# file install
# brief install the oai-spgw from the openair-cn git repository
# author  navid.nikaein@eurecom.fr and A. B. Molini   

install_packages(){
    #status-set maintenance "Installing some dependencies"
     gitAlreadyInstalled=$(dpkg --get-selections snapd 2>/dev/null | grep -c 'install') || true
    if [ ! $gitAlreadyInstalled -eq 1 ]; then # If git is NOT installed
	apt-get install -y --force-yes snapd # Ensure necessary git dependency exist.
    fi
    
    gitAlreadyInstalled=$(dpkg --get-selections git 2>/dev/null | grep -c 'install') || true
    if [ ! $gitAlreadyInstalled -eq 1 ]; then # If git is NOT installed
       apt-get install -y git # Ensure necessary git dependency exist.
    fi

    atAlreadyInstalled=$(dpkg --get-selections at 2>/dev/null | grep -c 'install') || true
    if [ ! $atAlreadyInstalled -eq 1 ]; then 
       apt-get install -y at
    fi

    virtwhatAlreadyInstalled=$(dpkg --get-selections virt-what 2>/dev/null | grep -c 'install') || true
    if [ ! $virtwhatAlreadyInstalled -eq 1 ]; then 
	apt-get install -y --force-yes virt-what
    fi
}

clone_repo(){

    juju-log  "Fetching the Mosaic5G repository"
    
    echo -n | openssl s_client -showcerts -connect gitlab.eurecom.fr:443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' >> /etc/ssl/certs/ca-certificates.crt

    #everytime refresh the installation 
    if [ -d "$mosaic_path" ]; then  
	cd $mosaic_path
	git reset --hard HEAD
	cd - 
    else
	git clone https://gitlab.eurecom.fr/mosaic5g/mosaic5g.git $mosaic_path
    fi

}

update_hostname(){
  HOSTNAME=`echo $JUJU_UNIT_NAME | sed 's|/|-|'`
  echo "$HOSTNAME" > /etc/hostname
  hostname $HOSTNAME
  echo "127.0.0.1 `hostname`" > /etc/hosts
}

configure_hosts(){
  #realm=`config-get realm`
  #if [ -z "$(grep -o "`hostname`.$realm" /etc/hosts)" ]; then
     echo 127.0.0.1 localhost > /etc/hosts
     echo 127.0.0.1 `hostname` spgw >> /etc/hosts
#     echo 127.0.0.1 `hostname`.$realm `hostname` spgw >> /etc/hosts
#  fi
}

build_spgw(){
    
    cd $mosaic_path
    if [ "$snap" != "edge" ] || [ "snap" != "beta" ] ; then
	juju-log "channel $snap is not supported, use edge"
    else
	juju-log "Installing and building the HSS from OAI-CN snap"
    fi
    ./build_m5g -C
}

configure_network(){
  #allow dhcp
  local eth=$1
  if [ "$eth" = "eth0" ]; then
    echo "Ignore interface eth0"
    return
  fi
  local file=/etc/network/interfaces.d/${eth}.cfg
  cp ./files/eth1_tpl.cfg $file
  sed -i -e "s/eth1/$eth/g" $file

  #prevent dhcp gateway
  local hook=/etc/dhcp/dhclient-enter-hooks.d/net-${eth}
  cp ./files/dhclient_hook_tpl $hook
  sed -i -e "s/eth1/$eth/g" $hook
  chmod +x $hook
}
init_spgw(){
    
    oai-cn.hss-stop || true
    oai-cn.mme-stop || true
    oai-cn.spgw-stop || true
        
    oai-cn.spgw-init || true 
  #  echo "yes" > $CHARM_DIR/.spgw_running_flag
}

status-set maintenance "Install hook"
set -eux
export DEBIAN_FRONTEND=noninteractive
source $CHARM_DIR/utils/common
set_env
#echo "no" > $CHARM_DIR/.spgw_running_flag


open-port 2152/udp
open-port 2123/udp

snap=`config-get snap`
echo "$snap"           >  $CHARM_DIR/.snap

update_hostname

configure_network `config-get sgw-eth`
configure_network `config-get pgw-eth`

install_packages
machine_type=`virt-what`

clone_repo

configure_hosts

build_spgw

init_spgw
