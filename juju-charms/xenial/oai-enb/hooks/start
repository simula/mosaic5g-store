#!/bin/bash
# Copyright 2016-2018 Eurecom and Mosaic5G Platforms Authors
# Licensed to the Mosaic5G under one or more contributor license
# agreements. See the NOTICE file distributed with this
# work for additional information regarding copyright ownership.
# The Mosaic5G licenses this file to You under the
# Apache License, Version 2.0  (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the Mosaic5G:
#      contact@mosaic5g.io
#
################################################################################
# file start 
# brief start oai-enb service, this happens after install or config changed hooks
# author  navid.nikaein@eurecom.fr

set -eux
source $CHARM_DIR/utils/common
status-set maintenance "Start Hook"
set_env

if [ -f $CHARM_DIR/.oairan_running_flag ]; then
    oairan_running_flag=`cat $CHARM_DIR/.oairan_running_flag`
else
    oairan_running_flag="no"
fi

if [ "$oairan_running_flag" == "no" ] ; then
    juju-log "oai-ran not yet initialized "
    #exit 0
fi

CU_UNIT_RUNNING=0
CU_UNIT_PRESENT=0
MME_UNIT_RUNNING=0
MME_UNIT_PRESENT=1
RRU_UNIT_RUNNING=0
RRU_UNIT_PRESENT=0 
RTC_UNIT_RUNNING=0
RTC_UNIT_PRESENT=1 

node_func=`cat $CHARM_DIR/.node_func`
juju-log "OAI-RAN function is $node_func"
#if [ "$node_func" != "eNodeB_IP" ] ; then
#    MME_UNIT_PRESENT=1;
#fi

#if [ "$(config-get flexran_active)" == "yes" ] ; then
#    RTC_UNIT_PRESENT=1;
#fi

if [ "$(cat $CHARM_DIR/.du_active)" == "yes" ]; then
    # flag indicating that there is a remote CU unit 
    CU_UNIT_PRESENT=1;
fi

if [ "$(cat $CHARM_DIR/.rru_active)" == "yes" ]; then
    RRU_UNIT_PRESENT=1;
fi

if [ -f $CHARM_DIR/.rru_running ]; then
  rru_running=`cat $CHARM_DIR/.rru_running`
else
  rru_running="no"
fi

if [ -f $CHARM_DIR/.rtc_running ]; then
    rtc_running=`cat $CHARM_DIR/.rtc_running`
else
    rtc_running="no"
fi

if [ -f $CHARM_DIR/.mme_running ] ;then
    mme_running=`cat $CHARM_DIR/.mme_running`
else 
    mme_running="no"
fi
 
if [ "$mme_running" == "remote" ] || [ "$node_func" == "du" ] || [ "$node_func" == "DU" ]; then 
    MME_UNIT_RUNNING=1
fi 

if [ $CU_UNIT_PRESENT -gt 0 ]; then
    if [ -n "$(relation-ids cu)" ]; then
	
	for cu_id in $(relation-ids cu); do
	    for unit in $(relation-list -r $cu_id); do
		cu_running=`relation-get -r $cu_id cu_running $unit`
		if [ "$cu_running" == "yes" ]; then
		    CU_UNIT_RUNNING=$((cu_UNIT_RUNNING + 1))
		    echo "yes"  > $CHARM_DIR/.cu_running
		else
		    echo "no"  > $CHARM_DIR/.cu_running
		fi
	    done
	done

fi

if [ -n "$(relation-ids mme)" ]; then
   #we start the service only if we have a relation
   
   for mme_id in $(relation-ids mme); do
       juju-log ""$mme_id""
       #if the TAC is the same as before, the local setting won't change and so the relation-changed hook 
       #won't be called
       relation-set -r "$mme_id" TAC=`config-get TAC`
       for unit in $(relation-list -r $mme_id); do
          mme_running=`relation-get -r $mme_id mme_running $unit`
          if [ "$mme_running" == "yes" ]; then
             MME_UNIT_RUNNING=$((MME_UNIT_RUNNING + 1))
             #at least one MME is running among the ones connected to oai enb
             #so let's run oai enb...beacuse we have changed some configuration
          fi
       done
   done

fi    

if [ -n "$(relation-ids rru)" ]; then
   #we start the service only if we have a relation

    for rru_id in $(relation-ids rru); do
       juju-log ""$rru_id""
       RRU_UNIT_PRESENT=1
       relation-set -r "$rru_id" TARGET_HARDWARE=`config-get target_hardware`
       for rru_unit in $(relation-list -r $rru_id); do
	   rru_running=`relation-get -r $rru_id RRU_RUNNING $rru_unit`
	   if [ "$rru_running" == "yes" ]; then
	       RRU_UNIT_RUNNING=$((RRU_UNIT_RUNNING + 1))
	   fi
       done
   done

fi

if [ -n "$(relation-ids rtc)" ]; then
   #we start the service only if we have a relation

    for rtc_id in $(relation-ids rtc); do
       juju-log ""$rtc_id""
       RTC_UNIT_PRESENT=1
       for rtc_unit in $(relation-list -r $rtc_id); do
	   rtc_running=`relation-get -r $rtc_id RTC_RUNNING $rtc_unit`
	   if [ "$rtc_running" == "yes" ]; then
	       RTC_UNIT_RUNNING=$((RTC_UNIT_RUNNING + 1))
	   fi
       done
   done
 
fi

if [ $MME_UNIT_PRESENT -gt 0 ]; then
    if [ $MME_UNIT_RUNNING -gt 0 ]; then
	
	if [ $RTC_UNIT_PRESENT -gt 0 ]; then 
	    if [ $RTC_UNIT_RUNNING -gt 0 ]; then
		
		if [ $RRU_UNIT_PRESENT -gt 0 ]; then 
		    if [ $RRU_UNIT_RUNNING -gt 0 ]; then

			if [ $CU_UNIT_PRESENT -gt 0 ]; then # node func shall be DU 
			    if [ $CU_UNIT_RUNNING -gt 0 ]; then
				start_enb_process $node_func
			    else
				juju-log "Waiting for F1-CUDU Relation"
				status-set maintenance "Add F1-CUDU relation"
			    fi
			fi
			# either eNB or CU
			start_enb_process $node_func
			
		    else # RRU not running
			juju-log "Waiting for RRU Relation"
			status-set maintenance "Add RRU relation" 
		    fi
		else # RRU not present
		    start_enb_process $node_func
		fi
	    else # RTC not running
		juju-log "Waiting for RTC Relation"
		status-set maintenance "Add RTC relation"
	    fi
	    
	elif [ $RRU_UNIT_PRESENT -gt 0 ]; then  # RTC not present but RRU present
	    if [ $RRU_UNIT_RUNNING -gt 0 ]; then
		start_enb_process $node_func
	    else # RRU not running
		juju-log "Waiting for RRU Relation"
		status-set maintenance "Add RRU relation" 
	    fi
	else #RTC and RRU not present, but mme running
	    start_enb_process $node_func
	fi 
	
    else  # mme not running
	juju-log "Waiting for MME relation"
	status-set maintenance "Add MME relations"
    fi
    
elif [ "$node_func" == "eNodeB_IP" ]; then
    
    if [ $RTC_UNIT_PRESENT -gt 0 ]; then 
	if [ $RTC_UNIT_RUNNING -gt 0 ]; then
	    
	    if [ $RRU_UNIT_PRESENT -gt 0 ]; then 
		if [ $RRU_UNIT_RUNNING -gt 0 ]; then
		    
		    start_enb_process $node_func
		    
		else # RRU not running
		    juju-log "Waiting for RRU Relation"
		    status-set maintenance "Add RRU relation" 
		fi
	    else # RRU not present
		start_enb_process $node_func
	    fi
	else # RTC not running
	    juju-log "Waiting for RTC Relation"
	    status-set maintenance "Add RTC relation"
	fi
	
    elif [ $RRU_UNIT_PRESENT -gt 0 ]; then  # RTC not present but RRU present
	if [ $RRU_UNIT_RUNNING -gt 0 ]; then
	    start_enb_process $node_func
	else # RRU not running
	    juju-log "Waiting for RRU Relation"
	    status-set maintenance "Add RRU relation" 
	fi
    else #RTC and RRU not present
	start_enb_process $node_func
    fi
else
    juju-log "Unknown node func $node_func"
    status-set blocked "Unknown node func $node_func"
    
fi


